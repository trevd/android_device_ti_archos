### archos-common.rc we will put all the common archos stuff in here
### this will keep out init.rc nice and clean an make it easier to port future android
### releases.
on early-init
	export EXTERNAL_STORAGE /storage/sdcard0
	export SECONDARY_STORAGE /storage/sdcard1
	mkdir /storage 0050 system sdcard_r
	mkdir /storage/sdcard0 0000 system system
	mkdir /storage/sdcard1 0000 system system
	# for backwards compatibility
	symlink /storage/sdcard0 /mnt/sdcard

# create removable USB Mass Storage mountpoints
    mkdir /storage/usb0 0000 system system
    mkdir /storage/usb1 0000 system system
    
on init

    ## Normal System Stuff 
    mount /tmp /tmp tmpfs
    chown root shell /tmp
    chmod 0775 /tmp

    # Give us an early adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer Archos #${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct G9 #${ro.product.model}
    write /sys/class/android_usb/android0/iSerial G9 #${ro.serialno}
    

    ## Archos specific additions
    ## mount rawfs to enable ramdisk flashing and reboot into functions
    mkdir /mnt/rawfs
        
    # mount the partition which holds our ext4 images. directory
    mkdir /._ 0771 system system
    
    ## Turn on the backlight otherwise we can't see noone.
    write /sys/class/leds/lcd-backlight/brightness 75
         
    
on fs
## Device Specific Mount Points - Archos System Mounts 
    mount rawfs /dev/block/mmcblk0p1 /mnt/rawfs
    mount ext4 /dev/block/mmcblk0p4 /._ 
## Use the Loop mount easter egg. Thanks Google!
    mount ext4 loop@/._/DATA /data nosuid nodev
    mount ext4 loop@/._/CAC /cache nosuid nodev
    mount ext4 loop@/._/system.img /system rw
    ## Don't want ro system during testing
    #mount ext4 loop@/._/system.img /system ro remount
    
## Set /dev/ion permissions
    chmod 0777 /dev/ion
    
# 3G
    insmod /system/lib/modules/hso.ko
    insmod /system/lib/modules/usb_wwan.ko
    insmod /system/lib/modules/option.ko
    
    # TSP
    insmod /system/lib/modules/pixcir_i2c_tsp.ko
    insmod /system/lib/modules/tr16c0-i2c.ko
    insmod /system/lib/modules/cpt_i2c_tsp.ko
# Bluetooth
    insmod /lib/modules/bluetooth/compat.ko
    insmod /lib/modules/bluetooth/bluetooth.ko
    insmod /lib/modules/bluetooth/rfcomm.ko
    insmod /lib/modules/bluetooth/hidp.ko
    insmod /lib/modules/bluetooth/btwilink.ko
    insmod /lib/modules/bluetooth/bnep.ko   
    # caution we have compat.ko for bluetooth and wifi. bluetooth'one is more advance and should be used in case of conflict	
    insmod /system/lib/modules/compat.ko
    insmod /system/lib/modules/cfg80211.ko
    insmod /system/lib/modules/mac80211.ko
    insmod /system/lib/modules/wl12xx.ko debug_level=0x63c00
    

on post-fs-data
    mkdir /data/smc 0770 drmrpc drmrpc
    setprop vold.post_fs_data_done 1    
    
    
on boot

  ### mount debugfs taken from init.omap4blazeboard.rc
  mount debugfs /sys/kernel/debug /sys/kernel/debug
  chmod 0666 /dev/pvrsrvkm
  #class_start default
  
# wi-fi
	mkdir /data/misc/wifi/sockets 0770 wifi wifi
	mkdir /data/misc/dhcp 0770 dhcp dhcp
	
service pvrsrvinit /vendor/bin/pvrsrvinit
	class core
	user root
	group root
	oneshot    
    
# bugreport is triggered by holding down volume down, volume up and power
service bugreport /system/bin/bugmailer.sh -v
	class main
	disabled
	oneshot
	keycodes 16 25

# create virtual SD card at /mnt/sdcard, based on the /data/media directory
# daemon will drop to user/group system/media_rw after initializing
# underlying files in /data/media will be created with user and group media_rw (1023)
service sdcard /system/bin/sdcard /data/media 1023 1023
	class main
	
## compass service
service akmd /system/bin/akmd8975 -m 6
    class core
    user compass
    group misc
   
## a logcats are a couple of archos specific badger but seemed like a nice port
service logcats /system/bin/logcat -f /data/test/logcat.log -r 512 -v time -b main -b system -b radio
    class core
    disabled

## the last_kmsg binary is pulled from an ICS Archos stock rom, seems to play with JB.
## if it isn't opensource it functionality can probably be easily reverse-engineered ls
## as a non-essential service it doesn't matter anyway
service last_kmsg /system/bin/last_kmsg -c 5
    class core
    oneshot

on property:persist.logcat.enable=1
    start logcats
    