on early-init
    start ueventd

on init
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /boot
    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /mnt
    mkdir /mnt/rawfs
    mount tmpfs tmpfs /tmp 
    mkdir /partitions 0771 system system
    mount ext4 /dev/block/mmcblk0p4 /partitions 
    mount rawfs /dev/block/mmcblk0p1 /mnt/rawfs

    # Mount /system rw first to give the filesystem a chance to save a checkpoint
    mount ext4 loop@/partitions/CAC /cache nosuid nodev
    mount ext4 loop@/partitions/DATA /data nosuid nodev
    mount ext4 loop@/partitions/SYS /system
    mount ext4 loop@/partitions/SDCARD /sdcard nosuid nodev
    mount ext4 loop@/partitions/BOOT /boot 


on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
# In recovery, always run adbd as root.
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    #write /sys/class/android_usb/android0/enable 1
    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
    write /sys/class/android_usb/android0/iProduct $ro.product.model
    write /sys/class/android_usb/android0/iSerial A101S_REC
    write /sys/class/leds/lcd-backlight/brightness 75
    #start adbd
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
